{"version":3,"file":"static/js/266.eee8335b.chunk.js","mappings":"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","sources":["components/header/navHeader.jsx"],"sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { Fragment, useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom';\nimport { arrowdown, arrowdownlight, avatar1, Avatar_, avatarman, cart, eye, eyeoff, favourite, notification, qmedUser, searchbar } from '../icons/icon';\nimport { Menu, Transition } from '@headlessui/react';\nimport { MdMenu } from 'react-icons/md';\nimport { Navbar, Nav, Container, Modal, Form } from 'react-bootstrap';\nimport { useMediaQuery } from 'react-responsive';\nimport { Avatar, message } from 'antd';\nimport { getUser } from '../store/reducer/userAuthSlice';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Dropdown } from 'react-bootstrap';\n// import { EditPassword } from '../api/info';\nimport { CircularProgress } from '@mui/material';\nimport { setUserData } from '../store/reducer/imperialAuth';\nconst NavHeader = ({ broken, setToggled, toggled }) => {\n  const isSmallScreen = useMediaQuery({ query: '(max-width: 768px)' });\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [password, setPassword] = useState(\"\")\n  const [passwordError, setPasswordError] = useState('');\n  const [editPassword, setEditPassword] = useState(false)\n\n\n  const navigate = useNavigate();\n  const roles = useSelector((state => state?.adminData?.adminData?.user?.roles))\n  const adminID = useSelector((state => state?.adminData?.adminData?.user?._id))\n  const dispatch = useDispatch()\n  const [selectedItem, setSelectedItem] = useState('')\n  const [showModal, setShowModal] = useState(false)\n  const openModal = () => {\n    setShowModal(true);\n  }\n  const closeModal = () => setIsModalOpen(false);\n\n  function classNames(...classes) {\n    return classes.filter(Boolean).join(' ');\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem(\"isLogin_imperial_admin\");\n    window.localStorage.removeItem(\"imperial_token\");\n    message.success(\"Logout Successful!\");\n    console.log(\"Logging out \");\n    dispatch(setUserData(null))\n    navigate('/login');\n  };\n  const handleChangePassword = (e) => {\n    setEditPassword(true)\n    e.preventDefault()\n    const data = {\n      password: password\n    }\n    if (!data?.password) {\n      setPasswordError('please enter password first')\n      setEditPassword(false)\n\n    } else {\n\n\n    }\n\n  }\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n  return (\n    <>\n      <Navbar bg=\"white\" expand=\"lg\" sticky=\"top\" className='p-3 shadow-sm w-[100%]' id=\"navbar\">\n        <Container fluid=\"lg\" className='w-full' >\n          <div className='flex items-center gap-3 md:w-1/2'>\n            {broken && (\n              <button className=\"sb-button\" onClick={() => setToggled(!toggled)}>\n                <MdMenu size={28} />\n              </button>\n            )}\n            {/* {isSmallScreen && (\n                            <div>\n                                <img src={searchbar} className='cursor-pointer' alt=\"\" onClick={openModal} />\n                                <Modal show={isModalOpen} onHide={closeModal}>\n                                    <Modal.Body className='p-0'>\n                                        <div className=\"flex items-center\">\n                                            <img src={searchbar} className='absolute m-2' alt=\"\" />\n                                            <input type=\"text\" className='w-full ps-10 py-[10px] border border-white rounded' placeholder='Search anything here' name=\"\" id=\"\" />\n                                        </div>\n                                    </Modal.Body>\n                                </Modal>\n                            </div>\n                        )}\n                        {!isSmallScreen && (\n                            <div className='hidden md:block w-full'>\n                                <img src={searchbar} className='absolute m-2' alt=\"\" />\n                                <input type=\"text\" className='ps-10 py-2 w-full' placeholder='Search anything here' name=\"\" id=\"\" />\n                            </div>\n                        )} */}\n            {/* <h3 className=\"d-none d-md-block poppins_semibold mb-0 text_dark\">Dashboard</h3> */}\n          </div>\n          <Nav className=\"ms-auto flex\">\n            <div className='flex justify-center items-center'>\n              {/* <Menu as=\"div\" className=\"relative\">\n                    <Menu.Button className=\"relative flex items-center ms-2 no-underline gap-2\">\n                        <img width=\"35px\" src={qmedUser} className='rounded-full' alt=\"\" />\n                        <img className='drop_' src={arrowdownlight} style={{ width: '20px', height: 'auto', color: \"black\" }} alt=\"\" />\n                    </Menu.Button>\n                    <Transition\n                        as={Fragment}\n                        enter=\"transition ease-out duration-100\"\n                        enterFrom=\"transform opacity-0 scale-95\"\n                        enterTo=\"transform opacity-100 scale-100\"\n                        leave=\"transition ease-in duration-75\"\n                        leaveFrom=\"transform opacity-100 scale-100\"\n                        leaveTo=\"transform opacity-0 scale-95\"\n                    >\n                        <Menu.Items className=\"absolute z-10 mt-2 flex flex-col rounded-3 bg_white shadow py-2\" style={{ minWidth: '10rem', right: '0px', position: 'absolute' }}>\n                            <Link onClick={handleLogout} style={{ textDecoration: 'none' }} className='px-4 py-1 text_dark plusJakara_semibold text_white no-underline'>\n                                Sign out\n                            </Link>\n                            {\n                                roles?.length > 0 &&\n                                <Menu.Items className=\"absolute z-10 mt-2 flex flex-col rounded-3 bg_white shadow py-2\" style={{ minWidth: '10rem', right: '0px', position: 'absolute' }}>\n                                    <Link onClick={handleLogout} style={{ textDecoration: 'none' }} className='px-4 py-1 text_dark plusJakara_semibold text_white no-underline'>\n                                    Change Password\n                                    </Link>\n                                </Menu.Items>\n                            }\n                        </Menu.Items>\n                    </Transition>\n                </Menu> */}\n              <Dropdown className=\"ms-auto flex\">\n                <Dropdown.Toggle style={{ display: \"contents\", width: \"7rem\" }} className=\"relative flex w-full flex-row items-center ms-2 no-underline gap-2 bg-transparent\" id=\"dropdown-basic\">\n                  <img width=\"35px\" src={qmedUser} className='rounded-full' alt=\"\" />\n                  <img className='drop_' src={arrowdownlight} style={{ width: '20px', height: 'auto', color: \"black\" }} alt=\"\" />\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu align=\"end\" className=\"z-10 mt-2 flex flex-col rounded-3 bg_white shadow py-2\" style={{ minWidth: '10rem' }}>\n                  {roles?.length > 0 && (\n                    <Dropdown.Item onClick={openModal} className='px-4 py-1 text_dark plusJakara_semibold text_white no-underline'>\n                      Change Password\n                    </Dropdown.Item>\n                  )}\n                  <Dropdown.Item onClick={handleLogout} className='px-4 py-1 text_dark plusJakara_semibold text_white no-underline'>\n                    Sign out\n                  </Dropdown.Item>\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n          </Nav>\n        </Container>\n      </Navbar>\n      <Modal show={showModal} onHide={() => { setShowModal(false) }} centered>\n        <Modal.Header className='border-0   px-3' closeButton>\n          <h4 className=\"mb-0  px-3\">Change Password</h4>\n\n        </Modal.Header>\n        <Modal.Body>\n\n\n          <Form onSubmit={handleChangePassword} className=\"w-full bg_white rounded-3  px-3\">\n            <div>\n\n\n              <Form.Group className=\"\">\n                <Form.Label className=\"plusJakara_medium text-black text-lg\">Enter New Password</Form.Label>\n                <div className=\"position-relative\">\n                  <Form.Control\n                    type={showPassword ? \"text\" : \"password\"}\n                    name=\"password\"\n                    placeholder=\"********\"\n                    value={password}\n                    onChange={(e) => {\n                      setPassword(e.target.value)\n                      setPasswordError('')\n                    }}\n                    className=\"plusJakara_medium\"\n                    isInvalid={!!passwordError}\n                  />\n                  <img\n                    src={showPassword ? eye : eyeoff}\n                    style={{ top: \"0px\", right: \"20px\" }}\n                    className=\"position-absolute m-2 cursor-pointer\"\n                    alt=\"Toggle Password Visibility\"\n                    onClick={togglePasswordVisibility}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">\n                    {passwordError}\n                  </Form.Control.Feedback>\n                </div>\n              </Form.Group>\n            </div>\n\n\n            <div className=\"flex justify-content-end my-4  w-100\">\n              {!editPassword ? (\n                <button\n                  type=\"submit\"\n                  className=\"flex justify-center bg_primary py-3 px-4 rounded-3 items-center\"\n                >\n                  <span className=\"plusJakara_semibold text_white\">Submit</span>\n                </button>\n              ) : (\n                <button\n                  type=\"button\"\n                  disabled={editPassword}\n                  className=\"flex justify-center bg_primary py-3 px-5 rounded-3 items-center\"\n                >\n                  <CircularProgress size={18} className=\"text_white\" />\n                </button>\n              )}\n            </div>\n          </Form>\n        </Modal.Body>\n      </Modal>\n    </>\n\n  )\n}\n\nexport default NavHeader\n"],"names":["_ref","broken","setToggled","toggled","useMediaQuery","query","isModalOpen","setIsModalOpen","useState","showPassword","setShowPassword","password","setPassword","passwordError","setPasswordError","editPassword","setEditPassword","navigate","useNavigate","roles","useSelector","state","_state$adminData","_state$adminData$admi","_state$adminData$admi2","adminData","user","dispatch","_state$adminData2","_state$adminData2$adm","_state$adminData2$adm2","_id","useDispatch","selectedItem","setSelectedItem","showModal","setShowModal","_jsxs","_Fragment","children","_jsx","Navbar","bg","expand","sticky","className","id","Container","fluid","onClick","MdMenu","size","Nav","Dropdown","Toggle","style","display","width","src","qmedUser","alt","arrowdownlight","height","color","Menu","align","minWidth","length","Item","openModal","handleLogout","window","localStorage","removeItem","message","success","console","log","setUserData","Modal","show","onHide","centered","Header","closeButton","Body","Form","onSubmit","e","preventDefault","data","Group","Label","Control","type","name","placeholder","value","onChange","target","isInvalid","eye","eyeoff","top","right","togglePasswordVisibility","Feedback","disabled","CircularProgress"],"sourceRoot":""}