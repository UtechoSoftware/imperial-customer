{"version":3,"file":"static/js/166.bd920b2f.chunk.js","mappings":"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","sources":["components/pages/sidebar.jsx"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\nimport { Menu, MenuItem, Sidebar, SubMenu } from \"react-pro-sidebar\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport close from \"../assets/png/hide.png\";\nimport open from \"../assets/png/open.png\";\nimport Switch from 'react-switch';\nimport { Tooltip } from \"antd\";\nimport {\n  BookOpen,\n  FileText,\n  Grid,\n  HelpCircle,\n  Info,\n  LogIn,\n  LogOut,\n  User,\n} from \"react-feather\";\nimport { finabeelight } from \"../icons/icon\";\nimport { setIsLogin_ } from \"../store/reducer/imperialAuth\";\nimport { useTranslation } from \"react-i18next\";\nconst SidebarMenu = ({ children, setToggled, toggled, setBroken }) => {\n  const user = useSelector(state => state.data.data.user)\n  const { t, i18n } = useTranslation();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const login = useSelector((state) => state.data.data.isLogin_);\n  const roles = useSelector(\n    (state) => state?.adminData?.adminData?.user?.roles\n  );\n  const LanguageSwitcher = () => {\n    const { i18n } = useTranslation();\n    const initialLanguage = JSON.parse(window.localStorage.getItem('imperial_language')) || 'pt';\n    const [language, setLanguage] = useState(initialLanguage);\n    const handleChangeLanguage = (lang) => {\n      i18n.changeLanguage(lang);\n      window.localStorage.setItem('imperial_language', JSON.stringify(lang));\n      setLanguage(lang);  // Update state with the selected language\n    };\n    // Ensure language is set on initial render based on localStorage\n    useEffect(() => {\n      handleChangeLanguage(initialLanguage);\n    }, [initialLanguage]);\n\n\n    return (\n      <div >\n        <select\n          value={language}\n          onChange={(e) => handleChangeLanguage(e.target.value)}\n          style={{ padding: '5px', fontSize: '14px' }}\n        >\n          <option value=\"en\">English</option>\n          <option value=\"pt\">Português</option>\n        </select>\n        <span style={{ marginLeft: '10px', color: language === 'pt' ? '#AA8555' : 'grey' }}>\n          {language === 'pt' ? 'Português' : 'English'}\n        </span>\n      </div>\n    );\n  };\n  const [collapsed, setCollapsed] = useState(false);\n  const [selectedLink, setSelectedLink] = useState(\"0\");\n  const [show, setShow] = useState(false);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (window.innerWidth < 880) {\n        setCollapsed(true);\n      } else {\n        setCollapsed(false);\n      }\n    };\n\n    handleResize();\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const handleLinkClick = (itemId, path) => {\n    setSelectedLink(itemId);\n    setToggled(false);\n    setShow(false);\n    if (path === \"/login\") {\n      handleLogout();\n    }\n    navigate(path);\n  };\n\n  const isChildPath = (parentPath, childPath) => {\n    return childPath.startsWith(parentPath);\n  };\n  const handleLogout = () => {\n    dispatch(setIsLogin_(false));\n    window.localStorage.removeItem('imperial_token');\n    window.sessionStorage.removeItem('hrData_company');\n    window.sessionStorage.removeItem('hrData');\n\n\n  };\n  const getParentPath = (path) => {\n    const pathSegments = path.split(\"/\");\n    return pathSegments.slice(0, pathSegments.length - 1).join(\"/\");\n  };\n\n  const toggleSidebar = () => {\n    setCollapsed(!collapsed);\n  };\n\n  let allowedItems = [];\n\n  if (roles?.length > 0) {\n    roles?.forEach((role) => {\n      switch (role) {\n        case \"question\":\n          allowedItems?.push({\n            icon: <FileText />,\n            iconActive: <FileText />,\n            items: \"Question\",\n            path: \"/question\",\n          });\n          break;\n        case \"exam\":\n          allowedItems?.push({\n            icon: <FileText />,\n            iconActive: <FileText />,\n            items: \"Exam\",\n            path: \"/exam\",\n          });\n          break;\n        case \"blog\":\n          allowedItems?.push({\n            icon: <BookOpen />,\n            iconActive: <BookOpen />,\n            items: \"Blogs\",\n            path: \"/blogs\",\n          });\n\n          break;\n        case \"FAQs\":\n          allowedItems?.push({\n            icon: <HelpCircle />,\n            iconActive: <HelpCircle style={{ color: \"#B39D70\" }} />,\n            items: \"FAQs\",\n            path: \"/help\",\n          });\n          break;\n        default:\n          break;\n      }\n    });\n  } else if (login) {\n\n    allowedItems = [\n      {\n        icon: <Grid />,\n        iconActive: <Grid />,\n        items: t('Calculator'),\n        path: \"/list-hr\",\n      },\n      {\n        icon: <Info />,\n        iconActive: <Info />,\n        items: t('Information'),\n        path: \"/info\",\n      },\n\n      {\n        icon: <User />,\n        iconActive: <User />,\n        items: t('profile'),\n        path: \"/profile\",\n      },\n      {\n        icon: <HelpCircle />,\n        iconActive: <HelpCircle />,\n        items: t('faq_h1'),\n        path: \"/help\",\n      },\n      // {\n      //   icon: <LanguageSwitcher />,\n      //   iconActive: <LanguageSwitcher />,\n      //   items: \"Language\",  // Optional label, can also be omitted\n      //   path: \"#\",  // Or an empty path if it doesn’t link to a new page\n      // },\n      login\n        ? {\n          icon: <LogOut />,\n          iconActive: <LogOut />,\n          items: t('logout'),\n          path: \"/login\",\n        }\n        : {\n          icon: <LogIn />,\n          iconActive: <LogIn />,\n          items: t('login'),\n          path: \"/login\",\n        },\n    ]\n\n  } else {\n    allowedItems = [\n      {\n        icon: <Grid />,\n        iconActive: <Grid />,\n        items: t('Calculator'),\n        path: \"/list-hr\",\n      },\n      {\n        icon: <Info />,\n        iconActive: <Info />,\n        items: t('Information'),\n        path: \"/info\",\n      },\n\n      {\n        icon: <HelpCircle />,\n        iconActive: <HelpCircle />,\n        items: t('faq_h1'),\n        path: \"/help\",\n      },\n\n      login\n        ? {\n          icon: <LogOut />,\n          iconActive: <LogOut />,\n          items: t('logout'),\n          path: \"/login\",\n        }\n        : {\n          icon: <LogIn />,\n          iconActive: <LogIn />,\n          items: t('login'),\n          path: \"/login\",\n        },\n\n    ]\n  }\n\n  // Separate Profile and Help items\n  const mainItems = allowedItems.slice(0, -2);  // Excludes the last two items\n  const bottomItems = allowedItems.slice(-2);   // Includes only the last two items\n\n\n\n\n  return (\n    <>\n      {window.location.pathname === \"/login\" ||\n        window.location.pathname === \"/register\" ||\n        window.location.pathname === \"/\" ? (\n        children\n      ) : login || !login ? (\n        <div className=\"flex h-screen min-h-screen\">\n          <div className=\"h-screen relative\" style={{ zIndex: 1050 }}>\n            <Sidebar\n              width=\"280px\"\n              style={{ height: \"100%\", zIndex: 1050 }}\n              collapsed={collapsed}\n              toggled={toggled}\n              backgroundColor=\"#161920\"\n              onBackdropClick={() => {\n                setToggled(false);\n                setShow(false);\n              }}\n            >\n              <div\n                className=\"scrolbar\"\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  overflowY: \"auto\",\n                  height: \"100%\",\n                  paddingTop: \"1rem\",\n                }}\n              >\n                {collapsed ? (\n                  <div className=\"mb-5 flex flex-col items-center justify-between px-4 py-3 w-fit\">\n                    <button\n                      onClick={() => {\n                        navigate(\"/list-hr\");\n                      }}\n                      className=\"\"\n                    >\n                      <img\n                        style={{\n                          height: \"2rem\",\n                          width: \"auto\",\n                          marginLeft: \"auto\",\n                          borderRadius: \"30px\",\n                          marginBottom: \"2rem\",\n                        }}\n                        src={finabeelight}\n                        className=\"\"\n                        alt=\"\"\n                      />\n                    </button>\n                    <button\n                      style={{ width: \"30px\" }}\n                      onClick={toggleSidebar}\n                      className=\"text-white\"\n                    >\n                      {collapsed ? (\n                        <img\n                          className=\"togle1\"\n                          src={open}\n                          style={{ width: \"30px\" }}\n                          alt=\"open\"\n                        />\n                      ) : (\n                        <img\n                          className=\"togle\"\n                          style={{ width: \"30px\" }}\n                          src={close}\n                          alt=\"close\"\n                        />\n                      )}\n                    </button>\n                  </div>\n                ) : (\n                  <div className=\"mb-5 flex items-center justify-between px-4 py-3\">\n                    <button\n                      onClick={() => {\n                        navigate(\"/list-hr\");\n                      }}\n                      className=\"\"\n                    >\n                      <img\n                        style={{\n                          height: \"3.5rem\",\n                          borderRadius: \"30px\",\n                          width: \"auto\",\n                          marginLeft: \"auto\",\n                        }}\n                        src={finabeelight}\n                        className=\"\"\n                        alt=\"\"\n                      />\n                    </button>\n                    <button onClick={toggleSidebar} className=\"text-white\">\n                      {collapsed ? (\n                        <img\n                          className=\"togle1\"\n                          style={{ width: \"30px\" }}\n                          src={open}\n                          alt=\"open\"\n                        />\n                      ) : (\n                        <img\n                          className=\"togle\"\n                          style={{ width: \"30px\" }}\n                          src={close}\n                          alt=\"close\"\n                        />\n                      )}\n                    </button>\n                  </div>\n                )}\n                <Menu className=\"container mx-auto flex flex-col justify-between text_white h-full\">\n                  <div style={{ flexGrow: 1 }}>\n                    {mainItems.map((item, i) => (\n                      <Fragment key={i}>\n                        {item.subItems ? (\n                          <SubMenu\n                            icon={item.icon}\n                            label={item.items}\n                            className={`w-full plusJakara_semibold rounded-3 mb-2 mx-auto  `}\n                          >\n                            {item.subItems.map((subItem, j) => (\n                              <MenuItem\n                                key={`${i}-${j}`}\n                                onClick={() =>\n                                  handleLinkClick(`${i}-${j}`, subItem.path)\n                                }\n                                component={<Link to={subItem.path} />}\n                                className={`w-full pb-2 sub_m  ${isChildPath(subItem.path, location.pathname)\n                                  ? \"text_secondary plusJakara_semibold\"\n                                  : \"text_white\"\n                                  }`}\n                              >\n                                <div className=\"flex items-center gap-4 text-white\">\n                                  {isChildPath(subItem.path, location.pathname)\n                                    ? item.iconActive\n                                    : item.icon}\n                                  <div className=\"plusJakara_semibold text-white\">\n                                    {subItem.label}\n                                  </div>\n                                </div>\n                              </MenuItem>\n                            ))}\n                          </SubMenu>\n                        ) : (\n                          <MenuItem\n                            key={i}\n                            onClick={() =>\n                              handleLinkClick(i.toString(), item.path)\n                            }\n                            component={<Link to={item.path} />}\n                            className={`w-full rounded-3 mb-2 ${isChildPath(item.path, location.pathname)\n                              ? \"text_secondary plusJakara_semibold\"\n                              : \"text-white\"\n                              }`}\n                          >\n                            <div className=\"flex items-center gap-4 text-white\">\n                              {isChildPath(item.path, location.pathname)\n                                ? item.iconActive\n                                : item.icon}\n                              {!collapsed && (\n                                <>\n                                  {item.items === t('Calculator') && (\n                                    <Tooltip title={t('popup1')}>\n                                      <div className=\"plusJakara_semibold\">\n                                        {item.items}\n                                      </div>\n                                    </Tooltip>\n                                  )}\n                                  {item.items === t('Information') && (\n                                    <Tooltip title={t('popup2')}>\n                                      <div className=\"plusJakara_semibold\">\n                                        {item.items}\n                                      </div>\n                                    </Tooltip>\n                                  )}\n                                  {item.items === t('profile') && (\n                                    <Tooltip title={(t('popup3'))}>\n                                      <div className=\"plusJakara_semibold\">\n                                        {item.items}\n                                      </div>\n                                    </Tooltip>\n                                  )}\n\n                                </>\n                              )}\n                            </div>\n                          </MenuItem>\n                        )}\n                      </Fragment>\n                    ))}\n                  </div>\n                  <div className=\"absolute bottom-0 w-full\">\n                    {bottomItems.map((item, i) => (\n                      <MenuItem\n                        key={i}\n                        onClick={() => handleLinkClick(i.toString(), item.path)}\n                        component={<Link to={item.path} />}\n                        className={`w-full rounded-3 mb-2 ${isChildPath(item.path, location.pathname)\n                          ? \"text_secondary plusJakara_semibold\"\n                          : \"text-white\"\n                          }`}\n                      >\n\n                        <div className=\"flex items-center gap-4 text-white\">\n                          {isChildPath(item.path, location.pathname)\n                            ? item.iconActive\n                            : item.icon}\n                          {!collapsed && (\n                            <div className=\"plusJakara_semibold togle1\">\n                              {item.items === t('faq_h1') && (\n                                <Tooltip title={t('popup4')}>\n                                  <div className=\"plusJakara_semibold text-white\">\n                                    {item.items}\n                                  </div>\n                                </Tooltip>\n                              )}\n                              {item.items === t('logout') && (\n                                <div className=\"plusJakara_semibold\">\n                                  {item.items}\n                                </div>\n\n                              )}\n                              {item.items === t('login') && (\n                                <div className=\"plusJakara_semibold\">\n                                  {item.items}\n                                </div>\n\n                              )}\n                            </div>\n\n                          )}\n                        </div>\n                      </MenuItem>\n                    ))}\n                  </div>\n                </Menu>\n              </div>\n            </Sidebar>\n          </div>\n          <main className=\"w-full overflow-auto\">{children}</main>\n        </div>\n      ) : (\n        children\n      )}\n\n      {/* {(\n        window.location.pathname ===\"/login\" &&\n        window.location.pathname ===\"/register\" &&\n        window.location.pathname ===\"/\") ? children  : \n      login || !login ? (\n        <div className=\"flex h-screen min-h-screen\">\n          <div className=\"h-screen relative\" style={{ zIndex: 1050 }}>\n            <Sidebar\n              width=\"280px\"\n              style={{ height: \"100%\", zIndex: 1050 }}\n              collapsed={collapsed}\n              toggled={toggled}\n              backgroundColor=\"#161920\"\n              onBackdropClick={() => {\n                setToggled(false);\n                setShow(false);\n              }}\n            >\n              <div\n                className=\"scrolbar\"\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  overflowY: \"auto\",\n                  height: \"100%\",\n                  paddingTop: \"1rem\",\n                }}\n              >\n                {collapsed ? (\n                  <div className=\"mb-5 flex flex-col items-center justify-between px-4 py-3 w-fit\">\n                    <button\n                      onClick={() => {\n                        navigate(\"/list-hr\");\n                      }}\n                      className=\"\"\n                    >\n                      <img\n                        style={{\n                          height: \"2.5rem\",\n                          width: \"auto\",\n                          marginLeft: \"auto\",\n                          marginBottom: \"2rem\",\n                        }}\n                        src={ finabeelight}\n                        className=\"\"\n                        alt=\"\"\n                      />\n                    </button>\n                    <button\n                      style={{ width: \"30px\" }}\n                      onClick={toggleSidebar}\n                      className=\"text-white\"\n                    >\n                      {collapsed ? (\n                        <img\n                          className=\"togle1\"\n                          src={open}\n                          style={{ width: \"30px\" }}\n                          alt=\"open\"\n                        />\n                      ) : (\n                        <img\n                          className=\"togle\"\n                          style={{ width: \"30px\" }}\n                          src={close}\n                          alt=\"close\"\n                        />\n                      )}\n                    </button>\n                  </div>\n                ) : (\n                  <div className=\"mb-5 flex items-center justify-between px-4 py-3\">\n                    <button\n                      onClick={() => {\n                        navigate(\"/list-hr\");\n                      }}\n                      className=\"\"\n                    >\n                      <img\n                        style={{\n                          height: \"4rem\",\n                          width: \"auto\",\n                          marginLeft: \"auto\",\n                        }}\n                        src={ finabeelight}\n                        className=\"\"\n                        alt=\"\"\n                      />\n                    </button>\n                    <button onClick={toggleSidebar} className=\"text-white\">\n                      {collapsed ? (\n                        <img\n                          className=\"togle1\"\n                          style={{ width: \"30px\" }}\n                          src={open}\n                          alt=\"open\"\n                        />\n                      ) : (\n                        <img\n                          className=\"togle\"\n                          style={{ width: \"30px\" }}\n                          src={close}\n                          alt=\"close\"\n                        />\n                      )}\n                    </button>\n                  </div>\n                )}\n                <Menu className=\"container mx-auto flex flex-col justify-between text_white h-full\">\n                  <div style={{ flexGrow: 1 }}>\n                    {mainItems.map((item, i) => (\n                      <Fragment key={i}>\n                        {console.log(item.items, \"ii\")}\n                        {item.subItems ? (\n                          <SubMenu\n                            icon={item.icon}\n                            label={item.items}\n                            className={`w-full plusJakara_semibold rounded-3 mb-2 mx-auto  `}\n                          >\n                            {item.subItems.map((subItem, j) => (\n                              <MenuItem\n                                key={`${i}-${j}`}\n                                onClick={() =>\n                                  handleLinkClick(`${i}-${j}`, subItem.path)\n                                }\n                                component={<Link to={subItem.path} />}\n                                className={`w-full pb-2 sub_m  ${\n                                  isChildPath(subItem.path, location.pathname)\n                                    ? \"text_secondary plusJakara_semibold\"\n                                    : \"text_white\"\n                                }`}\n                              >\n                                <div className=\"flex items-center gap-4\">\n                                  {isChildPath(subItem.path, location.pathname)\n                                    ? item.iconActive\n                                    : item.icon}\n                                  <div className=\"plusJakara_semibold\">\n                                    {subItem.label}\n                                  </div>\n                                </div>\n                              </MenuItem>\n                            ))}\n                          </SubMenu>\n                        ) : (\n                          <MenuItem\n                            key={i}\n                            onClick={() =>\n                              handleLinkClick(i.toString(), item.path)\n                            }\n                            component={<Link to={item.path} />}\n                            className={`w-full rounded-3 mb-2 ${\n                              isChildPath(item.path, location.pathname)\n                                ? \"text_secondary plusJakara_semibold\"\n                                : \"text-white\"\n                            }`}\n                          >\n                            <div className=\"flex items-center gap-4\">\n                              {isChildPath(item.path, location.pathname)\n                                ? item.iconActive\n                                : item.icon}\n                              {!collapsed && (\n                                <>\n                                  {item.items === \"Calculator\" && (\n                                    <Tooltip title=\"Calculate the annual potential savings for your company\">\n                                      <div className=\"plusJakara_semibold\">\n                                        {item.items}\n                                      </div>\n                                    </Tooltip>\n                                  )}\n                                  {item.items === t('Information') && (\n                                    <Tooltip title=\"Get to know how the Social Security exemption works\">\n                                      <div className=\"plusJakara_semibold\">\n                                        {item.items}\n                                      </div>\n                                    </Tooltip>\n                                  )}\n                                  {item.items === \"Profile\" && (\n                                    <Tooltip title=\"Review your profile and check your previous simulations\">\n                                      <div className=\"plusJakara_semibold\">\n                                        {item.items}\n                                      </div>\n                                    </Tooltip>\n                                  )}\n                                  {item.items === \"Help\" && (\n                                    <Tooltip title=\"Check the most frequently asked questions\">\n                                      <div className=\"plusJakara_semibold\">\n                                        {item.items}\n                                      </div>\n                                    </Tooltip>\n                                  )}\n                                </>\n                              )}\n                            </div>\n                          </MenuItem>\n                        )}\n                      </Fragment>\n                    ))}\n                  </div>\n                  <div className=\"absolute bottom-0 w-full\">\n                    {bottomItems.map((item, i) => (\n                      <MenuItem\n                        key={i}\n                        onClick={() => handleLinkClick(i.toString(), item.path)}\n                        component={<Link to={item.path} />}\n                        className={`w-full rounded-3 mb-2 ${\n                          isChildPath(item.path, location.pathname)\n                            ? \"text_secondary plusJakara_semibold\"\n                            : \"text-white\"\n                        }`}\n                      >\n                        <div className=\"flex items-center gap-4\">\n                          {isChildPath(item.path, location.pathname)\n                            ? item.iconActive\n                            : item.icon}\n                          {!collapsed && (\n                            <div className=\"plusJakara_semibold togle1\">\n                              {item.items}\n                            </div>\n                          )}\n                        </div>\n                      </MenuItem>\n                    ))}\n                  </div>\n                </Menu>\n              </div>\n            </Sidebar>\n          </div>\n          <main className=\"w-full overflow-auto\">{children}</main>\n        </div>\n      ) :  (\n        children\n      )} */}\n    </>\n  );\n};\n\nexport default SidebarMenu;\n"],"names":["_ref","children","setToggled","toggled","setBroken","useSelector","state","data","user","t","i18n","useTranslation","dispatch","useDispatch","location","useLocation","login","isLogin_","roles","_state$adminData","_state$adminData$admi","_state$adminData$admi2","adminData","collapsed","setCollapsed","useState","selectedLink","setSelectedLink","show","setShow","navigate","useNavigate","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","handleLinkClick","itemId","path","handleLogout","isChildPath","parentPath","childPath","startsWith","setIsLogin_","localStorage","removeItem","sessionStorage","toggleSidebar","allowedItems","length","forEach","role","_allowedItems","_allowedItems2","_allowedItems3","_allowedItems4","push","icon","_jsx","FileText","iconActive","items","BookOpen","HelpCircle","style","color","Grid","Info","User","LogOut","LogIn","mainItems","slice","bottomItems","_Fragment","pathname","_jsxs","className","zIndex","Sidebar","width","height","backgroundColor","onBackdropClick","display","flexDirection","overflowY","paddingTop","onClick","marginLeft","borderRadius","marginBottom","src","finabeelight","alt","open","close","Menu","flexGrow","map","item","i","Fragment","subItems","SubMenu","label","subItem","j","MenuItem","component","Link","to","toString","Tooltip","title"],"sourceRoot":""}